import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import make_interp_spline
from scipy.signal import lfilter
from scipy.signal import firwin, freqz
from scipy.signal import remez, ellipord, ellip, cheb1ord, cheby1, butter, lfilter, cheb2ord, cheby2
from scipy.signal import butter, sosfilt, sosfreqz

# Sample data
# x = [0.309017, 0.587785, 0.809017, 0.951057, 1.000000, 0.951056, 0.809017, 0.587785, 0.309017, -0.000000, -0.309017, -0.587786, -0.809017, -0.951057, -1.000000, -0.951056, -0.809016, -0.587784, -0.309016, 0.000002, 0.544640, 0.913546, 0.987688, 0.743144, 0.258817, -0.309019, -0.777147, -0.994522, -0.891006, -0.499998, 0.052338, 0.587787, 0.933581, 0.978147, 0.707105, 0.207909, -0.358370, -0.809019, -0.998630, -0.866024, -0.669128, -0.406734, -0.104525, 0.207915, 0.500003, 0.743147, 0.913547, 0.994522, 0.978147, 0.866024, 0.669128, 0.406733, 0.104525, -0.207916, -0.500004, -0.743148, -0.913547, -0.994522, -0.978147, -0.866023, -0.669127, -0.406732, -0.104523, 0.207917, 0.500005, 0.743148, 0.913548, 0.994522, 0.978147, 0.866023, 0.669127, 0.406732, 0.104523, -0.207917, -0.500005, -0.743149, -0.913548, -0.994523, -0.978146, -0.866022, -0.453985, 0.104535, 0.629326, 0.951059, 0.965924, 0.669125, 0.156428, -0.406743, -0.838674, -1.000000, -0.838667, -0.406730, 0.156442, 0.669136, 0.965928, 0.951054, 0.629315, 0.104521, -0.453997, -0.866029, -0.998629, -0.809012, -0.358360, 0.207920, 0.707112, 0.978149, 0.933578, 0.587779, 0.052328, -0.500007, -0.891010, -0.994521, -0.777141, -0.309009, 0.258827, 0.743151, 0.987690, 0.913542, 0.544632, -0.000009, -0.309026, -0.587793, -0.809022, -0.951059, -1.000000, -0.951054, -0.809011, -0.587777, -0.309007, 0.000010, 0.309027, 0.587794, 0.809023, 0.951060, 1.000000, 0.951053, 0.809011, 0.587777, 0.309007, -0.000011, -0.544648, -0.913550, -0.987687, -0.743137, -0.258808, 0.309028, 0.777153, 0.994523, 0.891001, 0.499990, -0.052347, -0.587795, -0.933585, -0.978145, -0.707098, -0.207900, 0.358379, 0.809024, 0.998630, 0.866019, 0.669122, 0.406725, 0.104516, -0.207924, -0.500011, -0.743153, -0.913551, -0.994523, -0.978145, -0.866019, -0.669121, -0.406724, -0.104515, 0.207925, 0.500012, 0.743154, 0.913551, 0.994523, 0.978145, 0.866018, 0.669120, 0.406724, 0.104514, -0.207926, -0.500013, -0.743155, -0.913551, -0.994523, -0.978144, -0.866018, -0.669119, -0.406723, -0.104513, 0.207927, 0.500014, 0.743155, 0.913552, 0.994524, 0.978144, 0.866018, 0.669119, 0.406722, 0.104512, -0.207928, -0.500014, -0.743156, -0.913552, -0.994524, -0.978144, -0.866017, -0.669118, -0.406721, -0.104511, 0.207929, 0.500015, 0.743157, 0.913553, 0.994524, 0.978144, 0.866017, 0.453975, -0.104546, -0.629334, -0.951062, -0.965921, -0.669117, -0.156416, 0.406753, 0.838681, 1.000000, 0.838661, 0.406720, -0.156453, -0.669144, -0.965931, -0.951051, -0.629306, -0.104510, 0.454007, 0.866035, 0.978152, 0.994520, 0.913538, 0.743132, 0.499984, 0.207893, -0.104548, -0.406754, -0.669145, -0.866035, -0.978152, -0.994520, -0.913537, -0.743131, -0.499982, -0.207892, 0.104549, 0.406755, 0.669146, 0.866036, 0.998628, 0.809005, 0.358349, -0.207932, -0.707122, -0.978152, -0.933573, -0.587768, -0.052315, 0.500018, 0.891016, 0.994520, 0.777133, 0.308997, -0.258840, -0.743159, -0.987692, -0.913537, -0.544621, 0.000022, 0.309038, 0.587803, 0.809030, 0.951063, 1.000000, 0.951050, 0.809004, 0.587767, 0.308996, -0.000022, -0.309038, -0.587803, -0.809030, -0.951064, -1.000000, -0.951049, -0.809003, -0.587766, -0.308995, 0.000024];
# d = [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.309017, 0.587785, 0.809017, 0.951057, 1.000000, 0.951056, 0.809017, 0.587785, 0.309017, -0.000000, -0.309017, -0.587786, -0.809017, -0.951057, -1.000000, -0.951056, -0.809016, -0.587784, -0.309016, 0.000002, 0.544640, 0.913546, 0.987688, 0.743144, 0.258817, -0.309019, -0.777147, -0.994522, -0.891006, -0.499998, 0.052338, 0.587787, 0.933581, 0.978147, 0.707105, 0.207909, -0.358370, -0.809019, -0.998630, -0.866024, -0.669128, -0.406734, -0.104525, 0.207915, 0.500003, 0.743147, 0.913547, 0.994522, 0.978147, 0.866024, 0.669128, 0.406733, 0.104525, -0.207916, -0.500004, -0.743148, -0.913547, -0.994522, -0.978147, -0.866023, -0.669127, -0.406732, -0.104523, 0.207917, 0.500005, 0.743148, 0.913548, 0.994522, 0.978147, 0.866023, 0.669127, 0.406732, 0.104523, -0.207917, -0.500005, -0.743149, -0.913548, -0.994523, -0.978146, -0.866022, -0.453985, 0.104535, 0.629326, 0.951059, 0.965924, 0.669125, 0.156428, -0.406743, -0.838674, -1.000000, -0.838667, -0.406730, 0.156442, 0.669136, 0.965928, 0.951054, 0.629315, 0.104521, -0.453997, -0.866029, -0.998629, -0.809012, -0.358360, 0.207920, 0.707112, 0.978149, 0.933578, 0.587779, 0.052328, -0.500007, -0.891010, -0.994521, -0.777141, -0.309009, 0.258827, 0.743151, 0.987690, 0.913542, 0.544632, -0.000009, -0.309026, -0.587793, -0.809022, -0.951059, -1.000000, -0.951054, -0.809011, -0.587777, -0.309007, 0.000010, 0.309027, 0.587794, 0.809023, 0.951060, 1.000000, 0.951053, 0.809011, 0.587777, 0.309007, -0.000011, -0.544648, -0.913550, -0.987687, -0.743137, -0.258808, 0.309028, 0.777153, 0.994523, 0.891001, 0.499990, -0.052347, -0.587795, -0.933585, -0.978145, -0.707098, -0.207900, 0.358379, 0.809024, 0.998630, 0.866019, 0.669122, 0.406725, 0.104516, -0.207924, -0.500011, -0.743153, -0.913551, -0.994523, -0.978145, -0.866019, -0.669121, -0.406724, -0.104515, 0.207925, 0.500012, 0.743154, 0.913551, 0.994523, 0.978145, 0.866018, 0.669120, 0.406724, 0.104514, -0.207926, -0.500013, -0.743155, -0.913551, -0.994523, -0.978144, -0.866018, -0.669119, -0.406723, -0.104513, 0.207927, 0.500014, 0.743155, 0.913552, 0.994524, 0.978144, 0.866018, 0.669119, 0.406722, 0.104512, -0.207928, -0.500014, -0.743156, -0.913552, -0.994524, -0.978144, -0.866017, -0.669118, -0.406721, -0.104511, 0.207929, 0.500015, 0.743157, 0.913553, 0.994524, 0.978144, 0.866017, 0.453975, -0.104546, -0.629334, -0.951062, -0.965921, -0.669117, -0.156416, 0.406753, 0.838681, 1.000000, 0.838661, 0.406720, -0.156453, -0.669144, -0.965931, -0.951051, -0.629306, -0.104510, 0.454007, 0.866035, 0.978152, 0.994520, 0.913538, 0.743132, 0.499984, 0.207893, -0.104548, -0.406754, -0.669145, -0.866035, -0.978152, -0.994520, -0.913537, -0.743131, -0.499982, -0.207892, 0.104549, 0.406755, 0.669146, 0.866036, 0.998628, 0.809005, 0.358349, -0.207932, -0.707122, -0.978152, -0.933573, -0.587768, -0.052315, 0.500018, 0.891016, 0.994520, 0.777133, 0.308997, -0.258840, -0.743159, -0.987692, -0.913537, -0.544621, 0.000022, 0.309038, 0.587803, 0.809030, 0.951063, 1.000000, 0.951050, 0.809004, 0.587767, 0.308996, -0.000022];
# m = [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.000000, -0.095492, -0.345492, -0.654509, -0.904509, -1.000000, -0.904508, -0.654508, -0.345491, -0.095491, -0.000000, -0.168303, -0.536969, -0.799057, -0.706772, -0.258817, 0.293894, 0.628725, 0.584564, 0.275335, -0.000001, 0.028506, 0.536971, 0.922087, 0.726904, 0.183011, -0.064248, 0.278506, 0.804587, 0.889785, 0.433010, -0.035021, -0.239073, -0.097583, 0.203371, 0.353555, 0.154507, -0.327388, -0.804587, -0.976807, -0.749997, -0.447733, -0.165432, -0.010925, -0.043229, -0.250003, -0.552268, -0.834568, -0.989075, -0.956771, -0.749997, -0.447732, -0.165432, -0.010925, -0.043229, -0.250004, -0.552269, -0.834569, -0.989075, -0.956771, -0.749996, -0.447731, -0.165431, -0.010925, -0.043230, -0.250005, -0.552270, -0.834570, -0.989075, -0.956770, -0.749995, -0.303773, 0.042518, 0.065779, -0.197742, -0.482967, -0.497260, -0.142904, 0.404515, 0.820346, 0.866022, 0.380742, -0.042518, 0.098453, 0.636388, 0.933013, 0.636375, 0.098442, -0.042513, 0.380756, 0.866029, 0.837517, 0.329050, -0.056063, 0.139126, 0.683020, 0.930273, 0.587514, 0.061435, -0.023757, 0.433021, 0.889789, 0.804580, 0.278496, -0.064249, 0.183020, 0.726912, 0.922085, 0.536960, 0.028499, 0.000004, 0.275345, 0.584572, 0.628724, 0.293886, -0.258827, -0.706776, -0.799052, -0.536959, -0.168295, -0.000000, -0.095497, -0.345501, -0.654518, -0.904514, -1.000000, -0.904503, -0.654499, -0.345482, -0.095485, -0.000000, -0.168311, -0.536979, -0.799061, -0.706768, -0.258808, 0.293902, 0.628725, 0.584557, 0.275326, -0.000005, 0.028511, 0.536980, 0.922089, 0.726896, 0.183003, -0.064247, 0.278515, 0.804593, 0.889781, 0.433001, -0.035027, -0.239071, -0.097575, 0.203380, 0.353557, 0.154502, -0.327397, -0.804593, -0.976805, -0.749989, -0.447723, -0.165425, -0.010923, -0.043233, -0.250011, -0.552277, -0.834575, -0.989077, -0.956767, -0.749988, -0.447722, -0.165424, -0.010923, -0.043233, -0.250012, -0.552278, -0.834576, -0.989077, -0.956767, -0.749987, -0.447721, -0.165424, -0.010923, -0.043233, -0.250013, -0.552279, -0.834577, -0.989077, -0.956766, -0.749987, -0.447720, -0.165423, -0.010923, -0.043234, -0.250014, -0.552280, -0.834577, -0.989077, -0.956766, -0.749986, -0.447719, -0.165422, -0.010923, -0.043234, -0.250015, -0.552281, -0.834578, -0.989077, -0.956766, -0.749985, -0.303763, 0.042521, 0.065772, -0.197753, -0.482975, -0.497259, -0.142895, 0.404526, 0.820350, 0.866017, 0.380731, -0.042521, 0.098461, 0.636398, 0.933013, 0.636364, 0.098434, -0.042510, 0.380767, 0.866035, 0.820337, 0.404491, -0.142925, -0.497263, -0.482949, -0.197717, 0.065792, 0.042510, -0.303797, -0.750017, -0.956781, -0.989070, -0.834551, -0.552245, -0.249983, -0.043219, -0.010930, -0.165450, -0.447756, -0.750017, -0.976810, -0.804571, -0.327365, 0.154521, 0.353548, 0.203350, -0.097604, -0.239078, -0.035006, 0.433034, 0.889794, 0.804571, 0.278484, -0.064250, 0.183031, 0.726923, 0.922082, 0.536948, 0.028492, 0.000011, 0.275357, 0.584581, 0.628723, 0.293876, -0.258840, -0.706781, -0.799047, -0.536947, -0.168286, -0.000000, -0.095504, -0.345513, -0.654530, -0.904522, -1.000000, -0.904495, -0.654487, -0.345470, -0.095478, -0.000000];
# y = [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.000000, -0.000020, -0.000158, -0.000544, -0.000828, 0.000764, 0.007050, 0.017569, 0.020823, -0.009661, -0.106036, -0.283329, -0.517682, -0.744853, -0.885138, -0.881665, -0.731102, -0.492268, -0.267794, -0.160673, -0.218071, -0.391828, -0.551051, -0.555963, -0.352756, -0.019611, 0.280271, 0.413449, 0.373921, 0.281435, 0.273654, 0.381933, 0.508204, 0.531833, 0.440915, 0.347100, 0.363278, 0.475874, 0.552616, 0.478032, 0.272159, 0.072224, 0.002408, 0.061223, 0.125786, 0.059438, -0.174347, -0.482021, -0.709071, -0.746970, -0.597642, -0.359743, -0.162721, -0.100615, -0.198733, -0.415142, -0.664120, -0.849940, -0.901886, -0.800302, -0.584019, -0.335647, -0.150055, -0.098133, -0.199714, -0.415997, -0.664370, -0.849961, -0.901882, -0.800301, -0.584018, -0.335616, -0.149883, -0.097782, -0.199921, -0.418815, -0.671050, -0.854917, -0.888278, -0.748415, -0.494887, -0.250010, -0.130672, -0.167316, -0.272641, -0.297188, -0.141813, 0.157372, 0.446726, 0.573596, 0.512578, 0.384190, 0.339251, 0.415592, 0.512913, 0.513731, 0.417980, 0.339974, 0.372397, 0.476753, 0.529216, 0.467539, 0.364904, 0.343090, 0.427980, 0.518850, 0.507880, 0.408086, 0.337877, 0.380557, 0.485485, 0.528118, 0.457695, 0.357621, 0.347412, 0.441954, 0.532253, 0.508274, 0.381934, 0.273654, 0.281438, 0.373924, 0.413449, 0.280267, -0.019618, -0.352761, -0.555964, -0.551048, -0.391823, -0.218068, -0.160675, -0.267836, -0.492538, -0.731930, -0.882550, -0.882545, -0.731915, -0.492521, -0.267823, -0.160671, -0.218073, -0.391833, -0.551055, -0.555963, -0.352753, -0.019606, 0.280274, 0.413448, 0.373917, 0.281431, 0.273654, 0.381935, 0.508205, 0.531832, 0.440913, 0.347099, 0.363279, 0.475876, 0.552616, 0.478030, 0.272156, 0.072223, 0.002411, 0.061227, 0.125789, 0.059437, -0.174351, -0.482025, -0.709072, -0.746967, -0.597636, -0.359736, -0.162717, -0.100616, -0.198738, -0.415149, -0.664127, -0.849944, -0.901886, -0.800297, -0.584011, -0.335640, -0.150051, -0.098134, -0.199720, -0.416005, -0.664377, -0.849965, -0.901882, -0.800296, -0.584011, -0.335639, -0.150051, -0.098134, -0.199720, -0.416006, -0.664377, -0.849965, -0.901882, -0.800296, -0.584010, -0.335638, -0.150050, -0.098134, -0.199721, -0.416006, -0.664378, -0.849966, -0.901881, -0.800295, -0.584009, -0.335608, -0.149879, -0.097783, -0.199927, -0.418824, -0.671058, -0.854921, -0.888276, -0.748409, -0.494880, -0.250006, -0.130673, -0.167321, -0.272646, -0.297191, -0.141811, 0.157377, 0.446730, 0.573596, 0.512575, 0.384185, 0.339251, 0.415624, 0.512837, 0.512833, 0.415617, 0.339250, 0.384192, 0.512582, 0.573594, 0.446715, 0.157359, -0.141820, -0.297185, -0.272630, -0.167306, -0.130672, -0.250021, -0.494904, -0.748429, -0.888286, -0.854888, -0.670783, -0.417940, -0.198927, -0.100262, -0.162559, -0.359729, -0.597657, -0.746976, -0.709065, -0.482008, -0.174335, 0.059442, 0.125780, 0.061212, 0.002401, 0.072225, 0.272167, 0.478040, 0.552618, 0.475871, 0.363276, 0.347102, 0.440918, 0.531833, 0.508200, 0.381929, 0.273655, 0.281442, 0.373929, 0.413451, 0.280264, -0.019624, -0.352766, -0.555964, -0.551043, -0.391817, -0.218065];

x = [0.293893, 0.475528, 0.475528, 0.293893, -0.000000, -0.293893, -0.475528, -0.475528, -0.293892, 0.000000, 0.293893, 0.475528, 0.475528, 0.293892, -0.000000, -0.293893, -0.475528, -0.475528, -0.293892, 0.000001, 0.293893, 0.475529, 0.475528, 0.293892, -0.000001, -0.293893, -0.475529, -0.475528, -0.293892, 0.000001, 0.293894, 0.475529, 0.475528, 0.293892, -0.000001, -0.293894, -0.475529, -0.475528, -0.293891, 0.000002, 0.293894, 0.475529, 0.475528, 0.293891, -0.000002, -0.293894, -0.475529, -0.475528, -0.293891, 0.000002, 0.293894, 0.475529, 0.475528, 0.293891, -0.000002, -0.293894, -0.475529, -0.475527, -0.293891, 0.000003, 0.293895, 0.475529, 0.475527, 0.293890, -0.000003, -0.293895, -0.475529, -0.475527, -0.293890, 0.000003]
d = [0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000]
m = [0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000, 0.000000, 0.012270, 0.012270, 0.024534, 0.036782, 0.036782, 0.049008, 0.061205, 0.061205, 0.000000]
y
x = [0.587785, 0.951057, 0.951056, 0.587785, -0.000000, -0.587785, -0.951056, -0.951056, -0.587785, 0.000001, 0.587786, 0.951057, 0.951056, 0.587785, -0.000001, -0.587786, -0.951057, -0.951056, -0.587784, 0.000002, 0.587787, 0.951057, 0.951056, 0.587784, -0.000002, -0.587787, -0.951057, -0.951056, -0.587783, 0.000003, 0.913547, 0.743143, -0.309020, -0.994522, -0.499997, 0.587788, 0.978147, 0.207908, -0.809019, -0.866024, 0.104532, 0.951058, 0.669128, -0.406740, -1.000000, -0.406733, 0.669134, 0.951055, 0.104524, -0.866028, -0.994521, -0.743141, -0.207906, 0.406742, 0.866028, 0.994521, 0.743141, 0.207906, -0.406742, -0.866028, -0.809013, 0.207918, 0.978149, 0.587780, -0.500006, -0.994521, -0.309011, 0.743149, 0.913543, -0.000007]
y = [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.003207, -0.013630, -0.033003, -0.064808, -0.113426, -0.178501, -0.252015, -0.322745, -0.383313, -0.431931, -0.468242, -0.490400, -0.498038, -0.496739, -0.496739, -0.501245, -0.504030, -0.501245, -0.496739, -0.496739, -0.501245, -0.502922, -0.493635, -0.481509, -0.483302, -0.498314, -0.503988, -0.485558, -0.459204, -0.436378, -0.396256, -0.324542, -0.224404, -0.100372, 0.013547, 0.113793, 0.215892, 0.303279, 0.370434, 0.407422, 0.416270, 0.429809, 0.441123, 0.443548, 0.449224, 0.439404, 0.425883, 0.429357, 0.406660, 0.349029, 0.286064, 0.202381, 0.090717, -0.028824, -0.149192, -0.266520, -0.343287, -0.398554, -0.430372, -0.413381, -0.379664, -0.321377, -0.222468, -0.135359, -0.028893]

samplerate = 24000  # Sampling rate in Hz
t = np.arange(0, len(y)) / samplerate

fig, axs = plt.subplots(4, 2, figsize=(10, 8))
fs = samplerate  # Sampling frequency in Hz

# Smooth the curves
t_smooth = np.linspace(t.min(), t.max(), 1000)

x_smooth = make_interp_spline(t, x)(t_smooth)
d_smooth = make_interp_spline(t, d)(t_smooth)
m_smooth = make_interp_spline(t, m)(t_smooth)
y_smooth = make_interp_spline(t, y)(t_smooth)

# Plot each curve separately
axs[0, 0].plot(t_smooth, x_smooth, '-', label='Input')
axs[0, 0].set_ylabel('Amplitude (V)')
axs[0, 0].legend(loc='upper right')
axs[0, 0].set_title('FSK Test')

axs[1, 0].plot(t_smooth, d_smooth, '-', label='Delayed')
axs[1, 0].set_ylabel('Amplitude (V)')
axs[1, 0].legend(loc='upper right')

axs[2, 0].plot(t_smooth, m_smooth, '-', label='Demodulated')
axs[2, 0].set_ylabel('Amplitude (V)')
axs[2, 0].legend(loc='upper right')

axs[3, 0].plot(t_smooth, y_smooth, '-', label='Output')
axs[3, 0].set_xlabel('Sample (n)')
axs[3, 0].set_ylabel('Amplitude (V)')
axs[3, 0].legend(loc='upper right')

# IIR filter parameters
lowcut = 100  # Low cutoff frequency in Hz
highcut = 1000  # High cutoff frequency in Hz
rp = 1  # Maximum ripple in the passband (dB)
rs = 60  # Minimum attenuation in the stopband (dB)
order, Wn = ellipord([lowcut + 10, highcut - 100], [lowcut - 10, highcut + 100], rp, rs, fs=fs)  # Filter order

# IIR filter parameters
highcut = 1500  # High cutoff frequency in Hz
rp = 1  # Maximum ripple in the passband (dB)
rs = 60  # Minimum attenuation in the stopband (dB)
order, Wn = ellipord(highcut - 100, highcut + 100, rp, rs, fs=fs)  # Filter order

# Design an Elliptic bandpass filter
# sos = ellip(order, rp, rs, Wn, btype='low', fs=fs, output='sos')
sos = cheby2(order, rs, Wn, btype='low', fs=fs, output='sos')

# fig, axs = plt.subplots(4, 1, sharex=False, figsize=(10, 8))

# Plot the IIR filter response in dB
w, h = sosfreqz(sos, worN=8000, fs=fs)
axs[0, 1].plot(w, 20 * np.log10(np.abs(h)), 'b', label='Elliptic Filter Response')
axs[0, 1].set_title('Elliptic Filter Frequency Response')
axs[0, 1].set_xlabel('Frequency (Hz)')
axs[0, 1].set_ylabel('Gain (dB)')
axs[0, 1].grid()
axs[0, 1].set_xscale('log')
axs[0, 1].legend(loc='upper right')

# Plot the IIR filter step response
step = np.ones(1000)
step_time = np.arange(0, len(step)) / samplerate
step_response = sosfilt(sos, step)
axs[1, 1].plot(step_time, step_response, 'r', label='IIR Filter Step Response')
axs[1, 1].set_xlabel('Time (s)')
axs[1, 1].legend(loc='upper right')

# Apply the IIR filter to the signal m
m_filtered = sosfilt(sos, m)

# Smooth the filtered signal
# m_filtered_smooth = make_interp_spline(t, m_filtered)(t_smooth)

# Plot the filtered signal
axs[1, 1].plot(t, m_filtered, '-', label='Filtered Demodulated')
axs[1, 1].set_xlabel('Sample (n)')
axs[1, 1].set_ylabel('Amplitude (V)')
axs[1, 1].legend(loc='upper right')
axs[1, 1].set_title('Filtered Demodulated Signal')

# FIR filter parameters
numtaps = 15  # Number of filter coefficients (taps)
cutoff = 500  # Cutoff frequency in Hz
# Generate FIR filter coefficients for a bandpass filter
fir_coefficients = firwin(numtaps, cutoff, window='hamming', pass_zero=True, fs=fs)
# # FIR filter parameters for equiripple bandpass filter
# numtaps = 100  # Number of filter coefficients (taps)
# band = [100, 1000]  # Band edges in Hz
# trans_width = 50    # Width of transition from pass to stop, Hz
# desired = [0, 1, 0]  # Desired gain in each band
# edges = [0, band[0] - trans_width, band[0], band[1], band[1] + trans_width, 0.5*fs]
# # Generate FIR filter coefficients using the remez algorithm
# fir_coefficients = remez(numtaps, edges, desired, fs=fs)
print(fir_coefficients)

# Plot the FIR filter response in dB
w, h = freqz(fir_coefficients, worN=8000)
axs[2, 1].plot(0.5 * fs * w / np.pi, 20 * np.log10(np.abs(h)), 'b')
axs[2, 1].set_title('FIR Filter Frequency Response')
axs[2, 1].set_xlabel('Frequency (Hz)')
axs[2, 1].set_ylabel('Gain (dB)')
axs[2, 1].grid()
axs[2, 1].set_xscale('log')
axs[2, 1].legend(loc='upper right')

# Plot the FIR filter step response
fir_step_response = lfilter(fir_coefficients, 1.0, step)
axs[3, 1].plot(step_time, fir_step_response, 'r', label='FIR Filter Step Response')
axs[3, 1].set_xlabel('Time (s)')
axs[3, 1].legend(loc='upper right')

# Apply the FIR filter to the signal m
m_filtered = lfilter(fir_coefficients, 1.0, m)

# Smooth the filtered signal
# m_filtered_smooth = make_interp_spline(t, m_filtered)(t_smooth)

# Plot the filtered signal
axs[3, 1].plot(t, m_filtered, '-', label='Filtered Demodulated')
axs[3, 1].set_xlabel('Sample (n)')
axs[3, 1].set_ylabel('Amplitude (V)')
axs[3, 1].legend(loc='upper right')
axs[3, 1].set_title('Filtered Demodulated Signal')

# Show the plot
plt.tight_layout()
plt.show()

# # Compute the FFT of the x signal
# x_fft = np.fft.fft(x)
# x_freq = np.fft.fftfreq(len(x), 1 / samplerate)

# # Compute the FFT of the x signal
# x_fft = np.fft.fft(x)
# x_freq = np.fft.fftfreq(len(x), 1 / samplerate)

# # Plot the FFT of the x signal in dB and log scale
# plt.figure(figsize=(10, 4))
# plt.plot(x_freq, 20 * np.log10(np.abs(x_fft)), label='FFT of x')
# plt.xlabel('Frequency (Hz)')
# plt.ylabel('Magnitude (dB)')
# plt.title('FFT of x Signal')
# plt.legend(loc='upper right')
# plt.grid()
# plt.xscale('log')
# plt.show()